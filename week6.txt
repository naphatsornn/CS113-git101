#include <stdio.h>
int main(){
    int x= 100;
    int b  =0144;//เลขฐาน8
    int c = 0x64
    printf("x =%d\n",x);
    printf("reference of x %lu\n", &x); // &x เป็นการดึงaddress ออกมา
    printf("reference of x %p ,&x);
    char input [100];
    //get (input);
    int number [] = {1,2,3,4,5}; //เป็นวิธีประกาศ arrays
    int number [100]=3000;
    // &number [100]=500; : คือการหา ref number 100 ไม่สามารถทำได้ ห้ามเปลี่ยนaddress memory
    int*prt = &x; //ประกาศตัวแปรพ้อยเตอร์
    int*arrPtr = number;
    //ptr=x; เปลี่ยนaddressทั้พ้อยเตอร์ เป็นการชี้ address ที่ 100 ไม่ต้องใส่ * : *ptr =x (ค่าคงที่address เก็บไว้)
    //arrPtr = number เท่ากับ number==&number[0]
    //*ptr =2000; อ้างอิงถึงค่าที่อยู่ในพ้อยเตอร์นั้น
    //arrPtr =number;
    //*ptr=1000;

    int number[]={1,2,3,4};
    char input [100];
    gets(input);
    for(input *ptr=numbe; *ptr <=&number[3];ptr++);
    {
        printf("[%p]="%d\n",ptr, *ptr);

    }
}

pass by value ส่งค่าไปยังฟังก์ชันใช้งานได้เลย
pass by reference ส่งตำแหน่งงไปยัง ฟังก์ชัน 

2D array
อาเรย์ปกติเป็น1 มิติ(เป็นเส้ยน)
วอาเรย์สองมิติ เป็นตาราง ประกาศแบบสองชั้น
 int a[2][3];
 //[2] : row 
 //[3] : column
 เช่น
int a[2][3] ={1,2,3,4,5,6}
#include <stdio.h>
#define rowSize 2
#define colSize 3
int main (){
    int A[rowSize][colSize]={{1,2,3},{4,5,6}};
    int i=0, j=0;
    for (i=0;i<rowSize;i++){
        for (j=0; j<colSize;j++)
         printf("%d" ,A[i][j]);
        printf("\n");
    }
}